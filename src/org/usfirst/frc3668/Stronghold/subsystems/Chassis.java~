// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3668.Stronghold.subsystems;

import org.usfirst.frc3668.Stronghold.RobotMap;
import org.usfirst.frc3668.Stronghold.commands.*;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.AnalogGyro;


/**
 *
 */
public class Chassis extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon motorChassisRight1 = RobotMap.chassisMotorChassisRight1;
    private final CANTalon motorChassisRight2 = RobotMap.chassisMotorChassisRight2;
    private final CANTalon motorChassisLeft1 = RobotMap.chassisMotorChassisLeft1;
    private final CANTalon motorChassisLeft2 = RobotMap.chassisMotorChassisLeft2;
    private final RobotDrive robotDrive41 = RobotMap.chassisRobotDrive41;
    private final Encoder encoderChassisLeft1 = RobotMap.chassisEncoderChassisLeft1;
    private final AnalogGyro gyro = RobotMap.chassisGyro;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initGyro(){
    	gyro.initGyro();
    	gyro.calibrate();
    }
    
    public double getGyroAngle(){
    	double gyroAngle = gyro.getAngle();
    	System.out.println(gyroAngle);
		return gyro.getAngle();
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new CMDjoystickDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void drive(Joystick joyDrive) {
    	robotDrive41.arcadeDrive(joyDrive);

    }
    public void drive(double Speed, double Direction){
    	robotDrive41.arcadeDrive(Speed, Direction);
    
}
    public void resetEncoder(){
    	encoderChassisLeft1.reset();
    }
    public double getEncoderValue(){
    	return encoderChassisLeft1.getDistance();
    }
}

